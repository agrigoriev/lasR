% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stages.R
\name{classify_with_pdt}
\alias{classify_with_pdt}
\title{Ground Point Classification}
\usage{
classify_with_pdt(
  distance = 1,
  angle = 15,
  res = 50,
  min_size = 0.1,
  class = 2L
)
}
\arguments{
\item{distance}{Scalar. The threshold for iteration distance, as described in Figure 3 of Axelsson's paper.}

\item{angle}{Scalar. The threshold for iteration angle, as illustrated in Figure 3 of Axelsson's paper.
Use smaller values (close to 4.0) for flat areas and larger values (close to 10.0) for mountainous
areas.}

\item{res}{Scalar. The resolution for locating seed points. The default setting is usually adequate
for most scenarios.}

\item{min_size}{Scalar. The minimum size for triangles. Densification halts if triangles are smaller
than this limit. The default setting is generally suitable for most scenarios.}

\item{class}{Integer. The classification to assign to the points, typically 2 for ground points.}
}
\value{
This stage transforms the point cloud in the pipeline. It consequently returns nothing.
}
\description{
This function classifies ground points using a modified version of the Progressive TIN
densification method by Axelsson (2000) (see references). The approach involves iteratively c
onstructing a triangulated surface model (TIN) to classify ground points (see details). \strong{This
algorithm is robust and much more robust than the CSF in \link{classify_with_csf} and should be
preferred}. It is also robust to low noise points.
}
\details{
The method begins by identifying local low points, assuming at least one ground-level point exists
within any X meters area. Initially, the triangles of the TIN model are mostly below the ground
surface, only touching lowest points at their vertices. As the iterations progress, additional
points are incorporated to more accurately follow the true ground surface.\cr\cr
The classification process is controlled by two main parameters:
\itemize{
\item Iteration angle: This controls the rate at which points are classified based on variations in
ground level. Use smaller values (e.g., 4.0) for flat terrain and larger values (e.g., 10.0) for
mountainous regions.
\item Iteration distance: This limits large upward jumps in the model, preventing the misclassification
of points in low vegetation or on small buildings.
}
The algorithm is robust to low noise points, meaning it can handle some level of noise without
needing explicit noise classification. However, it is preferable to have noise classified points
to guarantee optimal results.
\cr\cr
The iteration angle can be automatically reduced if the triangles become too small, which helps
avoid excessive point density in small areas. The process can also stop entirely if the triangle
edges become shorter than a specified length.
}
\examples{
f <- system.file("extdata", "Topography.las", package="lasR")
pipeline = classify_with_pdt() + write_las()
ans = exec(pipeline, on = f, progress = TRUE)
}
\references{
Axelsson, P. (2000). DEM Generation from Laser Scanner Data Using adaptive TIN Models. International
Archives of Photogrammetry and Remote Sensing, 33(B4), 110â€“117. https://doi.org/10.1016/j.isprsjprs.2005.10.005
}
